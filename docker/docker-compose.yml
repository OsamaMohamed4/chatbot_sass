version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: chatbot_postgres
    environment:
      POSTGRES_USER: chatbot_user
      POSTGRES_PASSWORD: chatbot_pass
      POSTGRES_DB: chatbot_saas
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    container_name: chatbot_app
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=chatbot_user
      - POSTGRES_PASSWORD=chatbot_pass
      - POSTGRES_DB=chatbot_saas
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../app:/app/app
      - ../alembic:/app/alembic
    command: >
      sh -c "
        alembic upgrade head &&
        python -m app.initial_data &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

volumes:
  postgres_data:
