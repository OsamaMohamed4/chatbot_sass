"""initial commit

Revision ID: 8d04d1d51df2
Revises: 
Create Date: 2025-10-13 17:06:35.891478

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8d04d1d51df2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_website_access',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('website_id', sa.Integer(), nullable=True),
    sa.Column('permission_level', sa.String(length=20), nullable=False),
    sa.Column('custom_permissions', sa.JSON(), nullable=True),
    sa.Column('granted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('granted_by_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['granted_by_id'], ['company_users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['company_users.id'], ),
    sa.ForeignKeyConstraint(['website_id'], ['websites.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_website_access_id'), 'user_website_access', ['id'], unique=False)
    op.drop_index('ix_user_website_accesses_access_id', table_name='user_website_accesses')
    op.drop_table('user_website_accesses')
    op.alter_column('ai_models', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.drop_constraint('ai_models_website_id_fkey', 'ai_models', type_='foreignkey')
    op.create_foreign_key(None, 'ai_models', 'websites', ['website_id'], ['id'])
    op.alter_column('api_keys', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('api_keys', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_constraint('api_keys_website_id_fkey', 'api_keys', type_='foreignkey')
    op.create_foreign_key(None, 'api_keys', 'websites', ['website_id'], ['id'])
    op.alter_column('billing_records', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.drop_constraint('billing_records_company_id_fkey', 'billing_records', type_='foreignkey')
    op.create_foreign_key(None, 'billing_records', 'client_companies', ['company_id'], ['id'])
    op.alter_column('chat_messages', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('chat_sessions', 'started_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('chat_sessions', 'last_activity_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('chat_sessions', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_constraint('chat_sessions_website_id_fkey', 'chat_sessions', type_='foreignkey')
    op.drop_constraint('chat_sessions_user_id_fkey', 'chat_sessions', type_='foreignkey')
    op.create_foreign_key(None, 'chat_sessions', 'websites', ['website_id'], ['id'])
    op.create_foreign_key(None, 'chat_sessions', 'company_users', ['user_id'], ['id'])
    op.add_column('client_companies', sa.Column('industry', sa.String(length=50), nullable=True))
    op.add_column('client_companies', sa.Column('company_size', sa.String(length=20), nullable=True))
    op.add_column('client_companies', sa.Column('tax_id', sa.String(length=50), nullable=True))
    op.add_column('client_companies', sa.Column('account_status', sa.String(length=20), nullable=True))
    op.add_column('client_companies', sa.Column('suspension_reason', sa.String(length=255), nullable=True))
    op.add_column('client_companies', sa.Column('resource_plan_id', sa.Integer(), nullable=True))
    op.add_column('client_companies', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('client_companies', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('client_companies', 'company_name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('client_companies', 'company_email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('client_companies', 'contact_person',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('client_companies', 'phone',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               nullable=True)
    op.alter_column('client_companies', 'address',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.alter_column('client_companies', 'admin_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('client_companies', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('client_companies', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.drop_index('ix_client_companies_company_id', table_name='client_companies')
    op.drop_index('ix_client_companies_company_name', table_name='client_companies')
    op.create_index(op.f('ix_client_companies_id'), 'client_companies', ['id'], unique=False)
    op.create_unique_constraint(None, 'client_companies', ['company_email'])
    op.create_unique_constraint(None, 'client_companies', ['company_name'])
    op.drop_constraint('client_companies_admin_id_fkey', 'client_companies', type_='foreignkey')
    op.create_foreign_key(None, 'client_companies', 'resource_plans', ['resource_plan_id'], ['id'])
    op.create_foreign_key(None, 'client_companies', 'system_admins', ['admin_id'], ['id'])
    op.drop_column('client_companies', 'company_id')
    op.add_column('company_users', sa.Column('custom_permissions', sa.JSON(), nullable=True))
    op.add_column('company_users', sa.Column('failed_login_attempts', sa.Integer(), nullable=True))
    op.add_column('company_users', sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True))
    op.add_column('company_users', sa.Column('password_changed_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('company_users', sa.Column('created_by_id', sa.Integer(), nullable=True))
    op.add_column('company_users', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('company_users', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('company_users', 'username',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('company_users', 'email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('company_users', 'first_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('company_users', 'last_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('company_users', 'role',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=False)
    op.alter_column('company_users', 'last_login_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('company_users', 'company_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('company_users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('company_users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.drop_index('ix_company_users_user_id', table_name='company_users')
    op.create_index(op.f('ix_company_users_id'), 'company_users', ['id'], unique=False)
    op.drop_constraint('company_users_company_id_fkey', 'company_users', type_='foreignkey')
    op.drop_constraint('company_users_parent_user_id_fkey', 'company_users', type_='foreignkey')
    op.create_foreign_key(None, 'company_users', 'company_users', ['created_by_id'], ['id'])
    op.create_foreign_key(None, 'company_users', 'client_companies', ['company_id'], ['id'])
    op.drop_column('company_users', 'user_id')
    op.drop_column('company_users', 'parent_user_id')
    op.add_column('resource_allocations', sa.Column('current_websites', sa.Integer(), nullable=True))
    op.add_column('resource_allocations', sa.Column('billing_period_start', sa.DateTime(timezone=True), nullable=True))
    op.add_column('resource_allocations', sa.Column('billing_period_end', sa.DateTime(timezone=True), nullable=True))
    op.add_column('resource_allocations', sa.Column('overage_requests', sa.Integer(), nullable=True))
    op.add_column('resource_allocations', sa.Column('overage_storage_gb', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('resource_allocations', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('resource_allocations', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('resource_allocations', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('resource_allocations', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('resource_allocations', 'company_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('resource_allocations', 'plan_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index('ix_resource_allocations_allocation_id', table_name='resource_allocations')
    op.create_index(op.f('ix_resource_allocations_id'), 'resource_allocations', ['id'], unique=False)
    op.drop_constraint('resource_allocations_plan_id_fkey', 'resource_allocations', type_='foreignkey')
    op.drop_constraint('resource_allocations_company_id_fkey', 'resource_allocations', type_='foreignkey')
    op.create_foreign_key(None, 'resource_allocations', 'resource_plans', ['plan_id'], ['id'])
    op.create_foreign_key(None, 'resource_allocations', 'client_companies', ['company_id'], ['id'])
    op.drop_column('resource_allocations', 'expires_at')
    op.drop_column('resource_allocations', 'allocated_at')
    op.drop_column('resource_allocations', 'allocation_id')
    op.add_column('resource_plans', sa.Column('plan_type', sa.String(length=20), nullable=False))
    op.add_column('resource_plans', sa.Column('max_websites', sa.Integer(), nullable=False))
    op.add_column('resource_plans', sa.Column('max_training_hours', sa.Integer(), nullable=True))
    op.add_column('resource_plans', sa.Column('yearly_cost', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('resource_plans', sa.Column('overage_cost_per_request', sa.Numeric(precision=10, scale=4), nullable=True))
    op.add_column('resource_plans', sa.Column('overage_cost_per_gb', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('resource_plans', sa.Column('features', sa.JSON(), nullable=True))
    op.add_column('resource_plans', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('resource_plans', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('resource_plans', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('resource_plans', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('resource_plans', 'plan_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.drop_index('ix_resource_plans_plan_id', table_name='resource_plans')
    op.create_index(op.f('ix_resource_plans_id'), 'resource_plans', ['id'], unique=False)
    op.create_unique_constraint(None, 'resource_plans', ['plan_name'])
    op.drop_column('resource_plans', 'plan_id')
    op.add_column('system_admins', sa.Column('is_superuser', sa.Boolean(), nullable=True))
    op.add_column('system_admins', sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('system_admins', sa.Column('failed_login_attempts', sa.Integer(), nullable=True))
    op.add_column('system_admins', sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True))
    op.add_column('system_admins', sa.Column('two_factor_enabled', sa.Boolean(), nullable=True))
    op.add_column('system_admins', sa.Column('two_factor_secret', sa.String(length=32), nullable=True))
    op.add_column('system_admins', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('system_admins', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('system_admins', 'username',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('system_admins', 'email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('system_admins', 'first_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('system_admins', 'last_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('system_admins', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('system_admins', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.drop_index('ix_system_admins_admin_id', table_name='system_admins')
    op.create_index(op.f('ix_system_admins_id'), 'system_admins', ['id'], unique=False)
    op.drop_column('system_admins', 'admin_id')
    op.alter_column('usage_analytics', 'total_requests',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('usage_analytics', 'total_tokens_used',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               nullable=False)
    op.alter_column('usage_analytics', 'total_sessions',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('usage_analytics', 'avg_response_time_ms',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               nullable=False)
    op.drop_constraint('usage_analytics_company_id_fkey', 'usage_analytics', type_='foreignkey')
    op.drop_constraint('usage_analytics_website_id_fkey', 'usage_analytics', type_='foreignkey')
    op.drop_constraint('usage_analytics_user_id_fkey', 'usage_analytics', type_='foreignkey')
    op.create_foreign_key(None, 'usage_analytics', 'websites', ['website_id'], ['id'])
    op.create_foreign_key(None, 'usage_analytics', 'client_companies', ['company_id'], ['id'])
    op.create_foreign_key(None, 'usage_analytics', 'company_users', ['user_id'], ['id'])
    op.add_column('websites', sa.Column('widget_config', sa.JSON(), nullable=True))
    op.add_column('websites', sa.Column('business_hours', sa.JSON(), nullable=True))
    op.add_column('websites', sa.Column('welcome_message', sa.String(length=500), nullable=True))
    op.add_column('websites', sa.Column('offline_message', sa.String(length=500), nullable=True))
    op.add_column('websites', sa.Column('embed_code', sa.String(length=1000), nullable=True))
    op.add_column('websites', sa.Column('api_endpoint', sa.String(length=255), nullable=True))
    op.add_column('websites', sa.Column('webhook_url', sa.String(length=255), nullable=True))
    op.add_column('websites', sa.Column('primary_ai_model_id', sa.Integer(), nullable=True))
    op.add_column('websites', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('websites', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('websites', 'website_name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('websites', 'website_url',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('websites', 'domain',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               nullable=True)
    op.alter_column('websites', 'description',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=500),
               existing_nullable=True)
    op.alter_column('websites', 'company_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('websites', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('websites', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.drop_index('ix_websites_website_id', table_name='websites')
    op.drop_index('ix_websites_website_name', table_name='websites')
    op.create_index(op.f('ix_websites_id'), 'websites', ['id'], unique=False)
    op.drop_constraint('websites_company_id_fkey', 'websites', type_='foreignkey')
    op.create_foreign_key(None, 'websites', 'ai_models', ['primary_ai_model_id'], ['model_id'])
    op.create_foreign_key(None, 'websites', 'client_companies', ['company_id'], ['id'])
    op.drop_column('websites', 'website_config')
    op.drop_column('websites', 'website_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('websites', sa.Column('website_id', sa.INTEGER(), server_default=sa.text("nextval('websites_website_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.add_column('websites', sa.Column('website_config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'websites', type_='foreignkey')
    op.drop_constraint(None, 'websites', type_='foreignkey')
    op.create_foreign_key('websites_company_id_fkey', 'websites', 'client_companies', ['company_id'], ['company_id'])
    op.drop_index(op.f('ix_websites_id'), table_name='websites')
    op.create_index('ix_websites_website_name', 'websites', ['website_name'], unique=False)
    op.create_index('ix_websites_website_id', 'websites', ['website_id'], unique=False)
    op.alter_column('websites', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('websites', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('websites', 'company_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('websites', 'description',
               existing_type=sa.String(length=500),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.alter_column('websites', 'domain',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('websites', 'website_url',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=500),
               existing_nullable=False)
    op.alter_column('websites', 'website_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_column('websites', 'updated_at')
    op.drop_column('websites', 'id')
    op.drop_column('websites', 'primary_ai_model_id')
    op.drop_column('websites', 'webhook_url')
    op.drop_column('websites', 'api_endpoint')
    op.drop_column('websites', 'embed_code')
    op.drop_column('websites', 'offline_message')
    op.drop_column('websites', 'welcome_message')
    op.drop_column('websites', 'business_hours')
    op.drop_column('websites', 'widget_config')
    op.drop_constraint(None, 'usage_analytics', type_='foreignkey')
    op.drop_constraint(None, 'usage_analytics', type_='foreignkey')
    op.drop_constraint(None, 'usage_analytics', type_='foreignkey')
    op.create_foreign_key('usage_analytics_user_id_fkey', 'usage_analytics', 'company_users', ['user_id'], ['user_id'])
    op.create_foreign_key('usage_analytics_website_id_fkey', 'usage_analytics', 'websites', ['website_id'], ['website_id'])
    op.create_foreign_key('usage_analytics_company_id_fkey', 'usage_analytics', 'client_companies', ['company_id'], ['company_id'])
    op.alter_column('usage_analytics', 'avg_response_time_ms',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               nullable=True)
    op.alter_column('usage_analytics', 'total_sessions',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('usage_analytics', 'total_tokens_used',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               nullable=True)
    op.alter_column('usage_analytics', 'total_requests',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('system_admins', sa.Column('admin_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_index(op.f('ix_system_admins_id'), table_name='system_admins')
    op.create_index('ix_system_admins_admin_id', 'system_admins', ['admin_id'], unique=False)
    op.alter_column('system_admins', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('system_admins', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('system_admins', 'last_name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.alter_column('system_admins', 'first_name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.alter_column('system_admins', 'email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('system_admins', 'username',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('system_admins', 'updated_at')
    op.drop_column('system_admins', 'id')
    op.drop_column('system_admins', 'two_factor_secret')
    op.drop_column('system_admins', 'two_factor_enabled')
    op.drop_column('system_admins', 'locked_until')
    op.drop_column('system_admins', 'failed_login_attempts')
    op.drop_column('system_admins', 'last_login_at')
    op.drop_column('system_admins', 'is_superuser')
    op.add_column('resource_plans', sa.Column('plan_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'resource_plans', type_='unique')
    op.drop_index(op.f('ix_resource_plans_id'), table_name='resource_plans')
    op.create_index('ix_resource_plans_plan_id', 'resource_plans', ['plan_id'], unique=False)
    op.alter_column('resource_plans', 'plan_name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('resource_plans', 'updated_at')
    op.drop_column('resource_plans', 'created_at')
    op.drop_column('resource_plans', 'is_active')
    op.drop_column('resource_plans', 'id')
    op.drop_column('resource_plans', 'features')
    op.drop_column('resource_plans', 'overage_cost_per_gb')
    op.drop_column('resource_plans', 'overage_cost_per_request')
    op.drop_column('resource_plans', 'yearly_cost')
    op.drop_column('resource_plans', 'max_training_hours')
    op.drop_column('resource_plans', 'max_websites')
    op.drop_column('resource_plans', 'plan_type')
    op.add_column('resource_allocations', sa.Column('allocation_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('resource_allocations', sa.Column('allocated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('resource_allocations', sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'resource_allocations', type_='foreignkey')
    op.drop_constraint(None, 'resource_allocations', type_='foreignkey')
    op.create_foreign_key('resource_allocations_company_id_fkey', 'resource_allocations', 'client_companies', ['company_id'], ['company_id'])
    op.create_foreign_key('resource_allocations_plan_id_fkey', 'resource_allocations', 'resource_plans', ['plan_id'], ['plan_id'])
    op.drop_index(op.f('ix_resource_allocations_id'), table_name='resource_allocations')
    op.create_index('ix_resource_allocations_allocation_id', 'resource_allocations', ['allocation_id'], unique=False)
    op.alter_column('resource_allocations', 'plan_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('resource_allocations', 'company_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('resource_allocations', 'updated_at')
    op.drop_column('resource_allocations', 'created_at')
    op.drop_column('resource_allocations', 'is_active')
    op.drop_column('resource_allocations', 'id')
    op.drop_column('resource_allocations', 'overage_storage_gb')
    op.drop_column('resource_allocations', 'overage_requests')
    op.drop_column('resource_allocations', 'billing_period_end')
    op.drop_column('resource_allocations', 'billing_period_start')
    op.drop_column('resource_allocations', 'current_websites')
    op.add_column('company_users', sa.Column('parent_user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('company_users', sa.Column('user_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'company_users', type_='foreignkey')
    op.drop_constraint(None, 'company_users', type_='foreignkey')
    op.create_foreign_key('company_users_parent_user_id_fkey', 'company_users', 'company_users', ['parent_user_id'], ['user_id'])
    op.create_foreign_key('company_users_company_id_fkey', 'company_users', 'client_companies', ['company_id'], ['company_id'])
    op.drop_index(op.f('ix_company_users_id'), table_name='company_users')
    op.create_index('ix_company_users_user_id', 'company_users', ['user_id'], unique=False)
    op.alter_column('company_users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('company_users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('company_users', 'company_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('company_users', 'last_login_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('company_users', 'role',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('company_users', 'last_name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.alter_column('company_users', 'first_name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.alter_column('company_users', 'email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('company_users', 'username',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('company_users', 'updated_at')
    op.drop_column('company_users', 'id')
    op.drop_column('company_users', 'created_by_id')
    op.drop_column('company_users', 'password_changed_at')
    op.drop_column('company_users', 'locked_until')
    op.drop_column('company_users', 'failed_login_attempts')
    op.drop_column('company_users', 'custom_permissions')
    op.add_column('client_companies', sa.Column('company_id', sa.INTEGER(), server_default=sa.text("nextval('client_companies_company_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'client_companies', type_='foreignkey')
    op.drop_constraint(None, 'client_companies', type_='foreignkey')
    op.create_foreign_key('client_companies_admin_id_fkey', 'client_companies', 'system_admins', ['admin_id'], ['admin_id'])
    op.drop_constraint(None, 'client_companies', type_='unique')
    op.drop_constraint(None, 'client_companies', type_='unique')
    op.drop_index(op.f('ix_client_companies_id'), table_name='client_companies')
    op.create_index('ix_client_companies_company_name', 'client_companies', ['company_name'], unique=False)
    op.create_index('ix_client_companies_company_id', 'client_companies', ['company_id'], unique=False)
    op.alter_column('client_companies', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('client_companies', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('client_companies', 'admin_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('client_companies', 'address',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.alter_column('client_companies', 'phone',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('client_companies', 'contact_person',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('client_companies', 'company_email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('client_companies', 'company_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_column('client_companies', 'updated_at')
    op.drop_column('client_companies', 'id')
    op.drop_column('client_companies', 'resource_plan_id')
    op.drop_column('client_companies', 'suspension_reason')
    op.drop_column('client_companies', 'account_status')
    op.drop_column('client_companies', 'tax_id')
    op.drop_column('client_companies', 'company_size')
    op.drop_column('client_companies', 'industry')
    op.drop_constraint(None, 'chat_sessions', type_='foreignkey')
    op.drop_constraint(None, 'chat_sessions', type_='foreignkey')
    op.create_foreign_key('chat_sessions_user_id_fkey', 'chat_sessions', 'company_users', ['user_id'], ['user_id'])
    op.create_foreign_key('chat_sessions_website_id_fkey', 'chat_sessions', 'websites', ['website_id'], ['website_id'])
    op.alter_column('chat_sessions', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('chat_sessions', 'last_activity_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('chat_sessions', 'started_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('chat_messages', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint(None, 'billing_records', type_='foreignkey')
    op.create_foreign_key('billing_records_company_id_fkey', 'billing_records', 'client_companies', ['company_id'], ['company_id'])
    op.alter_column('billing_records', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.drop_constraint(None, 'api_keys', type_='foreignkey')
    op.create_foreign_key('api_keys_website_id_fkey', 'api_keys', 'websites', ['website_id'], ['website_id'])
    op.alter_column('api_keys', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('api_keys', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint(None, 'ai_models', type_='foreignkey')
    op.create_foreign_key('ai_models_website_id_fkey', 'ai_models', 'websites', ['website_id'], ['website_id'])
    op.alter_column('ai_models', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.create_table('user_website_accesses',
    sa.Column('access_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('website_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_level', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('granted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['company_users.user_id'], name='user_website_accesses_user_id_fkey'),
    sa.ForeignKeyConstraint(['website_id'], ['websites.website_id'], name='user_website_accesses_website_id_fkey'),
    sa.PrimaryKeyConstraint('access_id', name='user_website_accesses_pkey')
    )
    op.create_index('ix_user_website_accesses_access_id', 'user_website_accesses', ['access_id'], unique=False)
    op.drop_index(op.f('ix_user_website_access_id'), table_name='user_website_access')
    op.drop_table('user_website_access')
    # ### end Alembic commands ###
